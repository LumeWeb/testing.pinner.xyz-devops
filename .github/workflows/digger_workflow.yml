name: Digger Workflow
on:
  workflow_dispatch:
    inputs:
      spec:
        required: true
      run_name:
        required: false
run-name: ${{inputs.run_name}}
jobs:
  digger-job:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
      id-token: write
      pull-requests: write
      issues: read
      statuses: write
    steps:
      - uses: actions/checkout@v4
      - uses: lumeweb/akash-action@v0.1.3
        with:
          mnemonic: ${{ secrets.AKASH_WALLET_SEED }}
          cert-content: ${{ secrets.AKASH_CERT_CONTENT }}
          cert-id: ${{ secrets.AKASH_CERT_ID }}
      - name: ${{ fromJSON(github.event.inputs.spec).job_id }}
        run: echo "job id ${{ fromJSON(github.event.inputs.spec).job_id }}"
      - name: Process Akash Providers
        id: providers
        run: >
          PROVIDERS=$(yq eval '.providers[].address' config/akash-providers.yaml | jq
          -R -s -c 'split("\n")[:-1]')

          echo "PROVIDER_LIST=${PROVIDERS}" >> $GITHUB_ENV
      - uses: LumeWeb/digger-action@v0.1.1
        id: digger
        with:
          digger-spec: ${{ inputs.spec }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-endpoint-url: ${{ secrets.AWS_ENDPOINT_URL }}
          aws-region: us-east-1
          aws-bucket: ${{ secrets.AWS_BUCKET }}
          digger-version: v0.6.62
          secrets-context: ${{ toJson(secrets) }}
          variables-context: ${{ toJson(vars) }}
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ENDPOINT_URL: ${{ secrets.AWS_ENDPOINT_URL }}
          AWS_REGION: us-east-1
      - name: Prepare debug files
        if: failure()
        run: |
          if ls /tmp/deployment* 1> /dev/null 2>&1; then
            mkdir -p $GITHUB_WORKSPACE/debug_files_${{ github.run_id }}
            cp /tmp/deployment* $GITHUB_WORKSPACE/debug_files_${{ github.run_id }}/
          else
            echo "No deployment files found to upload"
            exit 1
          fi

      - name: Upload debug files to S3
        if: failure()
        uses: koraykoska/s3-upload-github-action@master
        env:
          FILE: debug_files_${{ github.run_id }}
          S3_ENDPOINT: ${{ secrets.AWS_ENDPOINT_URL }}
          S3_BUCKET: ${{ secrets.AWS_BUCKET }}
          S3_PREFIX: 'debug_files'  # This sets the base directory in the Space
          S3_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          S3_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}