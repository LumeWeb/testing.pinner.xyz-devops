name: Digger Workflow

on:
  workflow_dispatch:
    inputs:
      spec:
        required: true
      run_name:
        required: false

run-name: '${{inputs.run_name}}'

jobs:
  digger-job:
    runs-on: ubuntu-latest
    permissions:
      contents: write      # required to merge PRs
      actions: write       # required for plan persistence
      id-token: write      # required for workload-identity-federation
      pull-requests: write # required to post PR comments
      issues: read         # required to check if PR number is an issue or not
      statuses: write      # required to validate combined PR status

    steps:
      - uses: actions/checkout@v4
      - uses: lumeweb/akash-action@v0.1.3
        with:
          mnemonic: ${{ secrets.AKASH_WALLET_SEED }}
          cert-content: ${{ secrets.AKASH_CERT_CONTENT }}
          cert-id: ${{ secrets.AKASH_CERT_ID }}
      - name: ${{ fromJSON(github.event.inputs.spec).job_id }}
        run: echo "job id ${{ fromJSON(github.event.inputs.spec).job_id }}"
      - name: Process Akash Providers
        id: providers
        run: |
          PROVIDERS=$(yq eval '.providers[].address' config/akash-providers.yaml | jq -R -s -c 'split("\n")[:-1]')
          echo "provider_list=${PROVIDERS}" >> $GITHUB_OUTPUT
      - uses: LumeWeb/digger-action@v0.1.1
        with:
          digger-spec: ${{ inputs.spec }}
          aws-access-key-id: '${{ secrets.AWS_ACCESS_KEY_ID }}'
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-endpoint-url: '${{ secrets.AWS_ENDPOINT_URL }}'
          aws-region: 'us-east-1'
          aws-bucket: '${{ secrets.AWS_BUCKET }}'
          digger-version: 'v0.6.62'
          secrets-context: ${{ toJson(secrets) }}
          variables-context: ${{ toJson(vars) }}
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ENDPOINT_URL: ${{ secrets.AWS_ENDPOINT_URL }}
          AWS_REGION: 'us-east-1'config